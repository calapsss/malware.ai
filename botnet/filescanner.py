import os
import glob
import socket
import ssl

# Define the host and port for the remote control server
SERVER_HOST = "192.168.1.100"
SERVER_PORT = 8080

# Define the directory to scan for files
DIRECTORY = "C:\\files"

# Define a function that receives commands from the remote control client
def receive_commands(server_host, server_port):
    # Create a socket and bind it to the server host and port
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.bind((server_host, server_port))

    # Listen for incoming connections
    sock.listen()

    # Accept an incoming connection and receive commands from the remote control client
    conn, addr = sock.accept()

    # Wrap the socket in an SSL context to encrypt the communication
    ssl_context = ssl.create_default_context()
    ssl_sock = ssl_context.wrap_socket(conn, server_hostname=server_host)

    # Receive commands from the remote control client
    while True:
        data = ssl_sock.recv(1024)
        if not data:
            break

        # Parse the received data and execute the specified commands
        command = data.decode("utf-8")
        if command == "list":
            # List the files in the specified directory
            files = os.listdir(DIRECTORY)
            ssl_sock.send("\n".join(files).encode("utf-8"))
        elif command.startswith("search "):
            # Search for files by name
            pattern = command.split(" ", 1)[1]
            files = glob.glob(os.path.join(DIRECTORY, pattern))
            ssl_sock.send("\n".join(files).encode("utf-8"))
        elif command.startswith("download "):
            # Download a file from the host
            filename = command.split(" ", 1)[1]
            filepath = os.path.join(DIRECTORY, filename)
            with open(filepath, "rb") as f:
                ssl_sock.sendfile(f)
        elif command.startswith("delete "):
            # Delete a file from the host
            filename = command.split(" ", 1)[1]
            filepath = os.path.join(DIRECTORY, filename)
            os.remove(filepath)
            ssl_sock.send("File deleted".encode("utf-8"))

# Start the remote control server
receive_commands(SERVER_HOST, SERVER_PORT)
